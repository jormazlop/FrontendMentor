@use 'variables' as *;

.footer-subscribe {
  display: flex;
  gap: 2rem;

  @media (max-width: $mobile) {
    flex-direction: column;
  }

  input {
    border: none;
    border-radius: 0.5rem;
    padding: 0 1.5rem;
    width: 60%;

    @media (max-width: $mobile) {
      padding: 0.8rem 3rem;
      width: 100%;
    }

    &:focus {
      outline: none;
    }
  }

  button {
    pointer-events: auto;
    cursor: pointer;
    background: $pink;
    border: none;
    border-radius: 0.5rem;
    padding: 0.8rem 3rem;
    margin: 0;
    font-family: inherit;
    font-size: 0.85rem;
    position: relative;
    display: inline-block;
    overflow: hidden;
    font-family: 'OpenSans';
    font-weight: bold;
    color: $white;

    @media (max-width: $mobile) {
      align-self: flex-end;
      width: fit-content;
    }

    &::before,
    &::after {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      content: "";
      background: $white;
    }

    span {
      display: block;
      position: relative;
      z-index: 1;
    }

    > span {
      overflow: hidden;
      color: $white;
      transition-duration: 0.2s;

      > span {
        animation: MoveRightInitial 0.1s forwards, MoveRightEnd 0.3s forwards 0.2s;
      }
    }

    &::before {
      width: 135%;
      -webkit-clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 0% 0%);
      clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 0% 0%);
      transform: translate3d(-100%, 0, 0);
    }

    &::after {
      width: 105%;
      transform: translate3d(100%, 0, 0);
      transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
    }

    &:hover {

      > span {
        color: $black;
      }

      &::before {
        transform: translate3d(0, 0, 0);
        transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
      }

      &::after {
        transform: translate3d(0, 0, 0);
        transition: transform 0.01s 0.3s cubic-bezier(0.7, 0, 0.2, 1);
      }
    }

    &:active {
      transform: translate(1px, 1px);
    }

    &:disabled {
      background-color: $grey;
      pointer-events: none;
    }
  }

  &.error {

    input {
      border: 1px solid $red;
    }
  }
}

.email-error {

  overflow: hidden;
  position: relative;
  display: inline-block;
  margin-top: 0.5rem;

  span {
    display: block;
    position: relative;
    z-index: 1;
  }

  > span {
    overflow: hidden;
    color: $red;

    > span {
      font-size: 0.85rem;
      font-weight: bold;
      animation: MoveRightEnd 0.3s forwards;
    }
  }
}

@keyframes MoveRightInitial {
  to {
    transform: translate3d(105%, 0, 0);
  }
}

@keyframes MoveRightEnd {
  from {
    transform: translate3d(-100%, 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

